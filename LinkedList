class ListNode:
    def __init__(self, value=0, next=None):
        self.value = value
        self.next = next
class LinkedList:
    def __init__(self):
        self.head = None
        
    def add_at_head(self, value):
        new_node = ListNode(value)
        new_node.next = self.head
        self.head = new_node
        
    def insert_at_tail(self, value):
        new_node = ListNode(value)
        if not self.head:
            self.head = new_node
            return
        temp = self.head
        while(temp.next != None):
            temp = temp.next 
        temp.next = new_node
        
    def delete_node(self, value):
        temp = self.head
        if temp and temp.value == value:
            self.head = temp.next
            return
        prev = None
        while temp and temp.value != value:
            prev = temp
            temp = temp.next
        if temp:
            prev.next = temp.next
            
    def print_list(self):
        if not self.head:
            print("List empty!")
            return
        temp = self.head
        while temp:
            print(temp.value)
            temp = temp.next
        
ll = LinkedList()
ll.print_list()
ll.add_at_head(10)
ll.insert_at_tail(20)
ll.insert_at_tail(30)  
ll.print_list()
ll.delete_node(10)
ll.print_list()


        
    
        
